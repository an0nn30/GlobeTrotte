import { readdirSync, lstatSync, writeFileSync } from 'fs';
import { join } from 'path';

const viewFolder = 'src/cockpit/views/';
const presetRoute = ['landing', '404'];

let output = `/*
 *  DO NOT EDIT THIS FILE DIRECTLY! Edits will be overwritten on build.
 *
 *  Source: src/cockpit/shared/genRouter.ts
 */

import Vue from 'vue';
import Router from 'vue-router';

Vue.use(Router);

export default new Router({
    mode: 'history',
    base: process.env.BASE_URL,
    routes: [
        {
            path: '/',
            name: 'landing',
            component: () => import('./views/VLanding.vue'),
        }, {
            path: '*',
            name: '404',
            component: () => import('./views/V404.vue'),
        },`;

getFiles();

output += `
    ],
});
`;

writeFileSync('src/cockpit/router.ts', output);

function getFiles(folder: string = ''): void {
    const fullpath = viewFolder + folder;
    readdirSync(fullpath).forEach((file) => {
        if (!lstatSync(join(fullpath, file)).isFile()) {
            getFiles(folder + file + '/');
        } else {
            output += getRoutes(folder, file);
        }
    });
}

function getRoutes(path: string, file: string): string {
    const name = getPath(file);
    let urlPath = name.toLowerCase();
    let toReturn = '';

    if (presetRoute.includes(urlPath)) {
        return '';
    }

    if (urlPath.substr(0, 3).localeCompare('get') === 0) {
        urlPath = urlPath.substr(3);
        toReturn = getRoute(path + urlPath, path + name + 'Index', path + file);
        urlPath = urlPath += '/:id';
    }

    return toReturn + getRoute(path + urlPath, path + name, path + file);
}

function getRoute(path: string, name: string, component: string): string {
    return ` {
            path: '/` + path + `',
            name: '` + name + `',
            component: () => import('./views/` + component + `'),
        },`;
}

function getPath(filename: string): string {
    if (filename.substr(0, 1) === 'V') {
        filename = filename.substr(1);
    }

    return filename.split('.', 1)[0];
}
